// <auto-generated />
using System;
using CarAuctionPriceCalculator.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarAuctionPriceCalculator.Infrastructure.Migrations
{
    [DbContext(typeof(CarAuctionDbContext))]
    [Migration("20240906011055_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarAuctionPriceCalculator.Domain.Entities.Fee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FeeTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("FixedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MaxFeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MaxPriceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinFeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinPriceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("VehicleTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeeTypeId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Fees");
                });

            modelBuilder.Entity("CarAuctionPriceCalculator.Domain.Entities.FeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FeeTypes");
                });

            modelBuilder.Entity("CarAuctionPriceCalculator.Domain.Entities.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VehicleTypes");
                });

            modelBuilder.Entity("CarAuctionPriceCalculator.Domain.Entities.Fee", b =>
                {
                    b.HasOne("CarAuctionPriceCalculator.Domain.Entities.FeeType", "FeeType")
                        .WithMany()
                        .HasForeignKey("FeeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarAuctionPriceCalculator.Domain.Entities.VehicleType", "VehicleType")
                        .WithMany()
                        .HasForeignKey("VehicleTypeId");

                    b.Navigation("FeeType");

                    b.Navigation("VehicleType");
                });
#pragma warning restore 612, 618
        }
    }
}
